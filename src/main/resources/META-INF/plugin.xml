<idea-plugin version="2">
    <id>com.modusbox.portx.datasonnet</id>
    <name>DataSonnet Mapper</name>
    <version>0.1</version>
    <vendor email="eugene.berman@modusbox.com" url="">Eugene Berman</vendor>
    <description><![CDATA[
     DataSonnet Plugin for IntelliJ. This plugin allows to edit and preview DataSonnet mappings in the editor pane. It is based on the Databricks Jsonnet plugin but provides additional functionality
    ]]></description>

    <!--<depends>com.databricks</depends>-->

    <idea-version since-build="180.*"/>

    <change-notes><![CDATA[

    <h1>v0.1</h1>
      <ul>
       <li>
          <p>Initial implementation</p>
          <ul>
            <li>Preview editor pane</li>
            <li></li>
            <li></li>
          </ul>
        </li>
      </ul>
    ]]>
    </change-notes>

    <extensions defaultExtensionNs="com.intellij">

        <fileEditorProvider implementation="com.modusbox.portx.datasonnet.editor.DataSonnetEditorProvider"/>
        <fileTypeFactory implementation="com.modusbox.portx.datasonnet.language.DataSonnetFileTypeFactory"/>

        <fileType name="DataSonnet" implementationClass="com.modusbox.portx.datasonnet.language.DataSonnetFileType"
                  fieldName="INSTANCE" language="Datasonnet" extensions="ds"/>

        <projectConfigurable groupId="tools" displayName="DataSonnet" id="com.modusbox.portx.datasonnet.configurable"
                             instance="com.modusbox.portx.datasonnet.config.DataSonnetConfigurable" nonDefaultProject="true"/>
        <applicationService serviceImplementation="com.modusbox.portx.datasonnet.config.DataSonnetSettingsComponent"/>
        <projectService serviceImplementation="com.modusbox.portx.datasonnet.config.DataSonnetProjectSettingsComponent"/>

        <lang.parserDefinition language="Datasonnet" implementationClass="com.modusbox.portx.datasonnet.language.DataSonnetParserDefinition"/>
        <lang.syntaxHighlighterFactory language="Datasonnet" implementationClass="com.modusbox.portx.datasonnet.language.DataSonnetSyntaxHighlighterFactory"/>
        <fileTypeFactory implementation="com.modusbox.portx.datasonnet.language.DataSonnetFileTypeFactory"/>
        <lang.commenter language="Datasonnet" implementationClass="com.modusbox.portx.datasonnet.language.DataSonnetCommenter"/>
        <completion.contributor language="Datasonnet" implementationClass="com.modusbox.portx.datasonnet.language.DataSonnetCompletionContributor"/>
        <lang.foldingBuilder language="Datasonnet" implementationClass="com.modusbox.portx.datasonnet.language.DataSonnetFoldingBuilder"/>
        <psi.referenceContributor implementation="com.modusbox.portx.datasonnet.language.DataSonnetReferenceContributor"/>

        <annotator language="Datasonnet" implementationClass="com.modusbox.portx.datasonnet.language.DataSonnetAnnotator"/>

        <codeStyleSettingsProvider implementation="com.modusbox.portx.datasonnet.language.formatter.DataSonnetCodeStyleSettingsProvider"/>
        <langCodeStyleSettingsProvider implementation="com.modusbox.portx.datasonnet.language.formatter.DataSonnetLanguageCodeStyleSettingsProvider"/>

        <lang.formatter language="Datasonnet" implementationClass="com.modusbox.portx.datasonnet.language.formatter.DataSonnetFormattingModelBuilder"/>
        <!--<configurationType implementation="org.mule.tooling.lang.dw.launcher.configuration.WeaveConfigurationType"/>-->
        <!--<runConfigurationProducer implementation="org.mule.tooling.lang.dw.launcher.configuration.WeaveConfigurationProducer"/>-->

        <!--<lang.parserDefinition language="Weave" implementationClass="org.mule.tooling.lang.dw.parser.WeaveParserDefinition"/>-->
        <!--<lang.syntaxHighlighterFactory language="Weave"-->
                                       <!--implementationClass="org.mule.tooling.lang.dw.highlighter.WeaveSyntaxHighlighterFactory"/>-->
        <!--<colorSettingsPage implementation="org.mule.tooling.lang.dw.highlighter.WeaveColorSettingsPage"/>-->
        <!--<lang.commenter language="Weave" implementationClass="org.mule.tooling.lang.dw.WeaveCommenter"/>-->
        <!--<lang.braceMatcher language="Weave" implementationClass="org.mule.tooling.lang.dw.WeavePairedBraceMatcher"/>-->
        <!--<quoteHandler fileType="Weave" className="org.mule.tooling.lang.dw.WeaveQuoteHandler"/>-->

        <!--<lang.refactoringSupport language="Weave"-->
                                 <!--implementationClass="org.mule.tooling.lang.dw.refactor.WeaveRefactoringSupportProvider"/>-->
        <!--<lang.elementManipulator forClass="org.mule.tooling.lang.dw.parser.psi.WeaveNamedElement"-->
                                 <!--implementationClass="org.mule.tooling.lang.dw.parser.psi.WeaveNamedElementManipulator"/>-->
        <!--<lang.findUsagesProvider language="Weave"-->
                                 <!--implementationClass="org.mule.tooling.lang.dw.parser.psi.WeaveFindUsagesProvider"/>-->
        <!--<lang.foldingBuilder language="Weave" implementationClass="org.mule.tooling.lang.dw.folding.WeaveFolding"/>-->
        <!--<annotator language="Weave" implementationClass="org.mule.tooling.lang.dw.annotator.WeaveAnnotator"/>-->
        <!--<lang.psiStructureViewFactory language="Weave"-->
                                      <!--implementationClass="org.mule.tooling.lang.dw.structure.WeaveStructureViewBuilderFactory"/>-->
        <!--<completion.contributor language="Weave"-->
                                <!--implementationClass="org.mule.tooling.lang.dw.completion.WeaveCompletionContributor"/>-->

        <!--<xdebugger.breakpointType implementation="org.mule.tooling.lang.dw.debug.breakpoint.WeaveBreakpointType"/>-->

        <!--<programRunner id="WeaveDebug" implementation="org.mule.tooling.lang.dw.debug.WeaveDebuggerRunner" order="last"/>-->


        <!--<lang.substitutor implementationClass="org.mule.tooling.lang.dw.editor.DataSonnetEditor$WeaveIOSubstitutor" language="JSON"/>-->
        <!--<lang.substitutor implementationClass="org.mule.tooling.lang.dw.editor.DataSonnetEditor$WeaveIOSubstitutor" language="XML"/>-->
        <!--<lang.substitutor implementationClass="org.mule.tooling.lang.dw.editor.DataSonnetEditor$WeaveIOSubstitutor" language="TEXT"/>-->

    </extensions>

    <project-components>
        <component>
            <implementation-class>com.modusbox.portx.datasonnet.editor.ScenarioManager</implementation-class>
        </component>
    </project-components>

    <application-components>
        <!--<component>-->
            <!--<implementation-class>com.modusbox.portx.datasonnet.config.DataSonnetSettingsComponent</implementation-class>-->
        <!--</component>-->
    </application-components>


    <actions>
        <action id="DataSonnet.CreateNewFileAction"
                class="com.modusbox.portx.datasonnet.actions.CreateNewFileAction" text="DataSonnet File"
                description="Create New DataSonnet File">
            <add-to-group group-id="NewGroup" anchor="first"/>
        </action>

    </actions>

</idea-plugin>